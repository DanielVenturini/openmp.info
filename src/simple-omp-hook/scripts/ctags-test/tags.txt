!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
LIBGOMP_G_H	libgomp_g.h	31;"	macro
GOMP_barrier	libgomp_g.h	/^extern void GOMP_barrier (void);$/;"	prototype	signature:(void)
GOMP_barrier_cancel	libgomp_g.h	/^extern bool GOMP_barrier_cancel (void);$/;"	prototype	signature:(void)
GOMP_critical_start	libgomp_g.h	/^extern void GOMP_critical_start (void);$/;"	prototype	signature:(void)
GOMP_critical_end	libgomp_g.h	/^extern void GOMP_critical_end (void);$/;"	prototype	signature:(void)
GOMP_critical_name_start	libgomp_g.h	/^extern void GOMP_critical_name_start (void **);$/;"	prototype	signature:(void **)
GOMP_critical_name_end	libgomp_g.h	/^extern void GOMP_critical_name_end (void **);$/;"	prototype	signature:(void **)
GOMP_atomic_start	libgomp_g.h	/^extern void GOMP_atomic_start (void);$/;"	prototype	signature:(void)
GOMP_atomic_end	libgomp_g.h	/^extern void GOMP_atomic_end (void);$/;"	prototype	signature:(void)
GOMP_loop_static_start	libgomp_g.h	/^extern bool GOMP_loop_static_start (long, long, long, long, long *, long *);$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_dynamic_start (long, long, long, long, long *, long *);$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_guided_start	libgomp_g.h	/^extern bool GOMP_loop_guided_start (long, long, long, long, long *, long *);$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_runtime_start	libgomp_g.h	/^extern bool GOMP_loop_runtime_start (long, long, long, long *, long *);$/;"	prototype	signature:(long, long, long, long *, long *)
GOMP_loop_nonmonotonic_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_nonmonotonic_dynamic_start (long, long, long, long,$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_nonmonotonic_guided_start	libgomp_g.h	/^extern bool GOMP_loop_nonmonotonic_guided_start (long, long, long, long,$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_ordered_static_start	libgomp_g.h	/^extern bool GOMP_loop_ordered_static_start (long, long, long, long,$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_ordered_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_ordered_dynamic_start (long, long, long, long,$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_ordered_guided_start	libgomp_g.h	/^extern bool GOMP_loop_ordered_guided_start (long, long, long, long,$/;"	prototype	signature:(long, long, long, long, long *, long *)
GOMP_loop_ordered_runtime_start	libgomp_g.h	/^extern bool GOMP_loop_ordered_runtime_start (long, long, long, long *, long *);$/;"	prototype	signature:(long, long, long, long *, long *)
GOMP_loop_static_next	libgomp_g.h	/^extern bool GOMP_loop_static_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_dynamic_next	libgomp_g.h	/^extern bool GOMP_loop_dynamic_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_guided_next	libgomp_g.h	/^extern bool GOMP_loop_guided_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_runtime_next	libgomp_g.h	/^extern bool GOMP_loop_runtime_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_nonmonotonic_dynamic_next	libgomp_g.h	/^extern bool GOMP_loop_nonmonotonic_dynamic_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_nonmonotonic_guided_next	libgomp_g.h	/^extern bool GOMP_loop_nonmonotonic_guided_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_ordered_static_next	libgomp_g.h	/^extern bool GOMP_loop_ordered_static_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_ordered_dynamic_next	libgomp_g.h	/^extern bool GOMP_loop_ordered_dynamic_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_ordered_guided_next	libgomp_g.h	/^extern bool GOMP_loop_ordered_guided_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_ordered_runtime_next	libgomp_g.h	/^extern bool GOMP_loop_ordered_runtime_next (long *, long *);$/;"	prototype	signature:(long *, long *)
GOMP_loop_doacross_static_start	libgomp_g.h	/^extern bool GOMP_loop_doacross_static_start (unsigned, long *, long, long *,$/;"	prototype	signature:(unsigned, long *, long, long *, long *)
GOMP_loop_doacross_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_doacross_dynamic_start (unsigned, long *, long, long *,$/;"	prototype	signature:(unsigned, long *, long, long *, long *)
GOMP_loop_doacross_guided_start	libgomp_g.h	/^extern bool GOMP_loop_doacross_guided_start (unsigned, long *, long, long *,$/;"	prototype	signature:(unsigned, long *, long, long *, long *)
GOMP_loop_doacross_runtime_start	libgomp_g.h	/^extern bool GOMP_loop_doacross_runtime_start (unsigned, long *, long *,$/;"	prototype	signature:(unsigned, long *, long *, long *)
GOMP_parallel_loop_static_start	libgomp_g.h	/^extern void GOMP_parallel_loop_static_start (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long)
GOMP_parallel_loop_dynamic_start	libgomp_g.h	/^extern void GOMP_parallel_loop_dynamic_start (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long)
GOMP_parallel_loop_guided_start	libgomp_g.h	/^extern void GOMP_parallel_loop_guided_start (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long)
GOMP_parallel_loop_runtime_start	libgomp_g.h	/^extern void GOMP_parallel_loop_runtime_start (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long)
GOMP_parallel_loop_static	libgomp_g.h	/^extern void GOMP_parallel_loop_static (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long, unsigned)
GOMP_parallel_loop_dynamic	libgomp_g.h	/^extern void GOMP_parallel_loop_dynamic (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long, unsigned)
GOMP_parallel_loop_guided	libgomp_g.h	/^extern void GOMP_parallel_loop_guided (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long, unsigned)
GOMP_parallel_loop_runtime	libgomp_g.h	/^extern void GOMP_parallel_loop_runtime (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, unsigned)
GOMP_parallel_loop_nonmonotonic_dynamic	libgomp_g.h	/^extern void GOMP_parallel_loop_nonmonotonic_dynamic (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long, unsigned)
GOMP_parallel_loop_nonmonotonic_guided	libgomp_g.h	/^extern void GOMP_parallel_loop_nonmonotonic_guided (void (*)(void *), void *,$/;"	prototype	signature:(void (*)(void *), void *, unsigned, long, long, long, long, unsigned)
GOMP_loop_end	libgomp_g.h	/^extern void GOMP_loop_end (void);$/;"	prototype	signature:(void)
GOMP_loop_end_nowait	libgomp_g.h	/^extern void GOMP_loop_end_nowait (void);$/;"	prototype	signature:(void)
GOMP_loop_end_cancel	libgomp_g.h	/^extern bool GOMP_loop_end_cancel (void);$/;"	prototype	signature:(void)
GOMP_loop_ull_static_start	libgomp_g.h	/^extern bool GOMP_loop_ull_static_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_ull_dynamic_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_guided_start	libgomp_g.h	/^extern bool GOMP_loop_ull_guided_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_runtime_start	libgomp_g.h	/^extern bool GOMP_loop_ull_runtime_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_nonmonotonic_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_ull_nonmonotonic_dynamic_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_nonmonotonic_guided_start	libgomp_g.h	/^extern bool GOMP_loop_ull_nonmonotonic_guided_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_static_start	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_static_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_dynamic_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_guided_start	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_guided_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_runtime_start	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_runtime_start (bool, unsigned long long,$/;"	prototype	signature:(bool, unsigned long long, unsigned long long, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_static_next	libgomp_g.h	/^extern bool GOMP_loop_ull_static_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_dynamic_next	libgomp_g.h	/^extern bool GOMP_loop_ull_dynamic_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_guided_next	libgomp_g.h	/^extern bool GOMP_loop_ull_guided_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_runtime_next	libgomp_g.h	/^extern bool GOMP_loop_ull_runtime_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_nonmonotonic_dynamic_next	libgomp_g.h	/^extern bool GOMP_loop_ull_nonmonotonic_dynamic_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_nonmonotonic_guided_next	libgomp_g.h	/^extern bool GOMP_loop_ull_nonmonotonic_guided_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_static_next	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_static_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_dynamic_next	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_dynamic_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_guided_next	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_guided_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_ordered_runtime_next	libgomp_g.h	/^extern bool GOMP_loop_ull_ordered_runtime_next (unsigned long long *,$/;"	prototype	signature:(unsigned long long *, unsigned long long *)
GOMP_loop_ull_doacross_static_start	libgomp_g.h	/^extern bool GOMP_loop_ull_doacross_static_start (unsigned,$/;"	prototype	signature:(unsigned, unsigned long long *, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_doacross_dynamic_start	libgomp_g.h	/^extern bool GOMP_loop_ull_doacross_dynamic_start (unsigned,$/;"	prototype	signature:(unsigned, unsigned long long *, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_doacross_guided_start	libgomp_g.h	/^extern bool GOMP_loop_ull_doacross_guided_start (unsigned,$/;"	prototype	signature:(unsigned, unsigned long long *, unsigned long long, unsigned long long *, unsigned long long *)
GOMP_loop_ull_doacross_runtime_start	libgomp_g.h	/^extern bool GOMP_loop_ull_doacross_runtime_start (unsigned,$/;"	prototype	signature:(unsigned, unsigned long long *, unsigned long long *, unsigned long long *)
GOMP_ordered_start	libgomp_g.h	/^extern void GOMP_ordered_start (void);$/;"	prototype	signature:(void)
GOMP_ordered_end	libgomp_g.h	/^extern void GOMP_ordered_end (void);$/;"	prototype	signature:(void)
GOMP_doacross_post	libgomp_g.h	/^extern void GOMP_doacross_post (long *);$/;"	prototype	signature:(long *)
GOMP_doacross_wait	libgomp_g.h	/^extern void GOMP_doacross_wait (long, ...);$/;"	prototype	signature:(long, ...)
GOMP_doacross_ull_post	libgomp_g.h	/^extern void GOMP_doacross_ull_post (unsigned long long *);$/;"	prototype	signature:(unsigned long long *)
GOMP_doacross_ull_wait	libgomp_g.h	/^extern void GOMP_doacross_ull_wait (unsigned long long, ...);$/;"	prototype	signature:(unsigned long long, ...)
GOMP_parallel_start	libgomp_g.h	/^extern void GOMP_parallel_start (void (*) (void *), void *, unsigned);$/;"	prototype	signature:(void (*) (void *), void *, unsigned)
GOMP_parallel_end	libgomp_g.h	/^extern void GOMP_parallel_end (void);$/;"	prototype	signature:(void)
GOMP_parallel	libgomp_g.h	/^extern void GOMP_parallel (void (*) (void *), void *, unsigned, unsigned);$/;"	prototype	signature:(void (*) (void *), void *, unsigned, unsigned)
GOMP_cancel	libgomp_g.h	/^extern bool GOMP_cancel (int, bool);$/;"	prototype	signature:(int, bool)
GOMP_cancellation_point	libgomp_g.h	/^extern bool GOMP_cancellation_point (int);$/;"	prototype	signature:(int)
GOMP_task	libgomp_g.h	/^extern void GOMP_task (void (*) (void *), void *, void (*) (void *, void *),$/;"	prototype	signature:(void (*) (void *), void *, void (*) (void *, void *), long, long, bool, unsigned, void **, int)
GOMP_taskloop	libgomp_g.h	/^extern void GOMP_taskloop (void (*) (void *), void *,$/;"	prototype	signature:(void (*) (void *), void *, void (*) (void *, void *), long, long, unsigned, unsigned long, int, long, long, long)
GOMP_taskloop_ull	libgomp_g.h	/^extern void GOMP_taskloop_ull (void (*) (void *), void *,$/;"	prototype	signature:(void (*) (void *), void *, void (*) (void *, void *), long, long, unsigned, unsigned long, int, unsigned long long, unsigned long long, unsigned long long)
GOMP_taskwait	libgomp_g.h	/^extern void GOMP_taskwait (void);$/;"	prototype	signature:(void)
GOMP_taskyield	libgomp_g.h	/^extern void GOMP_taskyield (void);$/;"	prototype	signature:(void)
GOMP_taskgroup_start	libgomp_g.h	/^extern void GOMP_taskgroup_start (void);$/;"	prototype	signature:(void)
GOMP_taskgroup_end	libgomp_g.h	/^extern void GOMP_taskgroup_end (void);$/;"	prototype	signature:(void)
GOMP_sections_start	libgomp_g.h	/^extern unsigned GOMP_sections_start (unsigned);$/;"	prototype	signature:(unsigned)
GOMP_sections_next	libgomp_g.h	/^extern unsigned GOMP_sections_next (void);$/;"	prototype	signature:(void)
GOMP_parallel_sections_start	libgomp_g.h	/^extern void GOMP_parallel_sections_start (void (*) (void *), void *,$/;"	prototype	signature:(void (*) (void *), void *, unsigned, unsigned)
GOMP_parallel_sections	libgomp_g.h	/^extern void GOMP_parallel_sections (void (*) (void *), void *,$/;"	prototype	signature:(void (*) (void *), void *, unsigned, unsigned, unsigned)
GOMP_sections_end	libgomp_g.h	/^extern void GOMP_sections_end (void);$/;"	prototype	signature:(void)
GOMP_sections_end_nowait	libgomp_g.h	/^extern void GOMP_sections_end_nowait (void);$/;"	prototype	signature:(void)
GOMP_sections_end_cancel	libgomp_g.h	/^extern bool GOMP_sections_end_cancel (void);$/;"	prototype	signature:(void)
GOMP_single_start	libgomp_g.h	/^extern bool GOMP_single_start (void);$/;"	prototype	signature:(void)
GOMP_single_copy_start	libgomp_g.h	/^extern void *GOMP_single_copy_start (void);$/;"	prototype	signature:(void)
GOMP_single_copy_end	libgomp_g.h	/^extern void GOMP_single_copy_end (void *);$/;"	prototype	signature:(void *)
GOMP_target	libgomp_g.h	/^extern void GOMP_target (int, void (*) (void *), const void *,$/;"	prototype	signature:(int, void (*) (void *), const void *, size_t, void **, size_t *, unsigned char *)
GOMP_target_ext	libgomp_g.h	/^extern void GOMP_target_ext (int, void (*) (void *), size_t, void **, size_t *,$/;"	prototype	signature:(int, void (*) (void *), size_t, void **, size_t *, unsigned short *, unsigned int, void **, void **)
GOMP_target_data	libgomp_g.h	/^extern void GOMP_target_data (int, const void *,$/;"	prototype	signature:(int, const void *, size_t, void **, size_t *, unsigned char *)
GOMP_target_data_ext	libgomp_g.h	/^extern void GOMP_target_data_ext (int, size_t, void **, size_t *,$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *)
GOMP_target_end_data	libgomp_g.h	/^extern void GOMP_target_end_data (void);$/;"	prototype	signature:(void)
GOMP_target_update	libgomp_g.h	/^extern void GOMP_target_update (int, const void *,$/;"	prototype	signature:(int, const void *, size_t, void **, size_t *, unsigned char *)
GOMP_target_update_ext	libgomp_g.h	/^extern void GOMP_target_update_ext (int, size_t, void **, size_t *,$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *, unsigned int, void **)
GOMP_target_enter_exit_data	libgomp_g.h	/^extern void GOMP_target_enter_exit_data (int, size_t, void **, size_t *,$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *, unsigned int, void **)
GOMP_teams	libgomp_g.h	/^extern void GOMP_teams (unsigned int, unsigned int);$/;"	prototype	signature:(unsigned int, unsigned int)
GOACC_parallel_keyed	libgomp_g.h	/^extern void GOACC_parallel_keyed (int, void (*) (void *), size_t,$/;"	prototype	signature:(int, void (*) (void *), size_t, void **, size_t *, unsigned short *, ...)
GOACC_parallel	libgomp_g.h	/^extern void GOACC_parallel (int, void (*) (void *), size_t, void **, size_t *,$/;"	prototype	signature:(int, void (*) (void *), size_t, void **, size_t *, unsigned short *, int, int, int, int, int, ...)
GOACC_data_start	libgomp_g.h	/^extern void GOACC_data_start (int, size_t, void **, size_t *,$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *)
GOACC_data_end	libgomp_g.h	/^extern void GOACC_data_end (void);$/;"	prototype	signature:(void)
GOACC_enter_exit_data	libgomp_g.h	/^extern void GOACC_enter_exit_data (int, size_t, void **,$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *, int, int, ...)
GOACC_update	libgomp_g.h	/^extern void GOACC_update (int, size_t, void **, size_t *,$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *, int, int, ...)
GOACC_wait	libgomp_g.h	/^extern void GOACC_wait (int, int, ...);$/;"	prototype	signature:(int, int, ...)
GOACC_get_num_threads	libgomp_g.h	/^extern int GOACC_get_num_threads (void);$/;"	prototype	signature:(void)
GOACC_get_thread_num	libgomp_g.h	/^extern int GOACC_get_thread_num (void);$/;"	prototype	signature:(void)
GOACC_declare	libgomp_g.h	/^extern void GOACC_declare (int, size_t, void **, size_t *, unsigned short *);$/;"	prototype	signature:(int, size_t, void **, size_t *, unsigned short *)
