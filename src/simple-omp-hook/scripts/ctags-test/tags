!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GOMP_loop_doacross_dynamic_start	src/loop.c	/^GOMP_loop_doacross_dynamic_start (unsigned ncounts, long *counts,$/;"	f
GOMP_loop_doacross_guided_start	src/loop.c	/^GOMP_loop_doacross_guided_start (unsigned ncounts, long *counts,$/;"	f
GOMP_loop_doacross_runtime_start	src/loop.c	/^GOMP_loop_doacross_runtime_start (unsigned ncounts, long *counts,$/;"	f
GOMP_loop_doacross_static_start	src/loop.c	/^GOMP_loop_doacross_static_start (unsigned ncounts, long *counts,$/;"	f
GOMP_loop_dynamic_next	src/loop.c	/^GOMP_loop_dynamic_next (long *istart, long *iend)$/;"	f
GOMP_loop_dynamic_start	src/loop.c	/^GOMP_loop_dynamic_start (long start, long end, long incr, long chunk_size,$/;"	f
GOMP_loop_end	src/loop.c	/^GOMP_loop_end (void)$/;"	f
GOMP_loop_end_cancel	src/loop.c	/^GOMP_loop_end_cancel (void)$/;"	f
GOMP_loop_end_nowait	src/loop.c	/^GOMP_loop_end_nowait (void)$/;"	f
GOMP_loop_guided_next	src/loop.c	/^GOMP_loop_guided_next (long *istart, long *iend)$/;"	f
GOMP_loop_guided_start	src/loop.c	/^GOMP_loop_guided_start (long start, long end, long incr, long chunk_size,$/;"	f
GOMP_loop_nonmonotonic_dynamic_next	src/loop.c	/^GOMP_loop_nonmonotonic_dynamic_next (long *istart, long *iend)$/;"	f
GOMP_loop_nonmonotonic_dynamic_start	src/loop.c	/^GOMP_loop_nonmonotonic_dynamic_start (long start, long end, long incr,$/;"	f
GOMP_loop_nonmonotonic_guided_next	src/loop.c	/^GOMP_loop_nonmonotonic_guided_next (long *istart, long *iend)$/;"	f
GOMP_loop_nonmonotonic_guided_start	src/loop.c	/^GOMP_loop_nonmonotonic_guided_start (long start, long end, long incr,$/;"	f
GOMP_loop_ordered_dynamic_next	src/loop.c	/^GOMP_loop_ordered_dynamic_next (long *istart, long *iend)$/;"	f
GOMP_loop_ordered_dynamic_start	src/loop.c	/^GOMP_loop_ordered_dynamic_start (long start, long end, long incr,$/;"	f
GOMP_loop_ordered_guided_next	src/loop.c	/^GOMP_loop_ordered_guided_next (long *istart, long *iend)$/;"	f
GOMP_loop_ordered_guided_start	src/loop.c	/^GOMP_loop_ordered_guided_start (long start, long end, long incr,$/;"	f
GOMP_loop_ordered_runtime_next	src/loop.c	/^GOMP_loop_ordered_runtime_next (long *istart, long *iend)$/;"	f
GOMP_loop_ordered_runtime_start	src/loop.c	/^GOMP_loop_ordered_runtime_start (long start, long end, long incr,$/;"	f
GOMP_loop_ordered_static_next	src/loop.c	/^GOMP_loop_ordered_static_next (long *istart, long *iend)$/;"	f
GOMP_loop_ordered_static_start	src/loop.c	/^GOMP_loop_ordered_static_start (long start, long end, long incr,$/;"	f
GOMP_loop_runtime_next	src/loop.c	/^GOMP_loop_runtime_next (long *istart, long *iend)$/;"	f
GOMP_loop_runtime_start	src/loop.c	/^GOMP_loop_runtime_start (long start, long end, long incr,$/;"	f
GOMP_loop_static_next	src/loop.c	/^GOMP_loop_static_next (long *istart, long *iend)$/;"	f
GOMP_loop_static_start	src/loop.c	/^GOMP_loop_static_start (long start, long end, long incr, long chunk_size,$/;"	f
GOMP_parallel_loop_dynamic	src/loop.c	/^GOMP_parallel_loop_dynamic (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_dynamic_start	src/loop.c	/^GOMP_parallel_loop_dynamic_start (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_guided	src/loop.c	/^GOMP_parallel_loop_guided (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_guided_start	src/loop.c	/^GOMP_parallel_loop_guided_start (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_nonmonotonic_dynamic	src/loop.c	/^GOMP_parallel_loop_nonmonotonic_dynamic (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_nonmonotonic_guided	src/loop.c	/^GOMP_parallel_loop_nonmonotonic_guided (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_runtime	src/loop.c	/^GOMP_parallel_loop_runtime (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_runtime_start	src/loop.c	/^GOMP_parallel_loop_runtime_start (void (*fn) (void *), void *data,$/;"	f
GOMP_parallel_loop_static_start	src/loop.c	/^GOMP_parallel_loop_static_start (void (*fn) (void *), void *data,$/;"	f
gomp_loop_doacross_dynamic_start	src/loop.c	/^gomp_loop_doacross_dynamic_start (unsigned ncounts, long *counts,$/;"	f	file:
gomp_loop_doacross_guided_start	src/loop.c	/^gomp_loop_doacross_guided_start (unsigned ncounts, long *counts,$/;"	f	file:
gomp_loop_doacross_static_start	src/loop.c	/^gomp_loop_doacross_static_start (unsigned ncounts, long *counts,$/;"	f	file:
gomp_loop_dynamic_next	src/loop.c	/^gomp_loop_dynamic_next (long *istart, long *iend)$/;"	f	file:
gomp_loop_dynamic_start	src/loop.c	/^gomp_loop_dynamic_start (long start, long end, long incr, long chunk_size,$/;"	f	file:
gomp_loop_guided_next	src/loop.c	/^gomp_loop_guided_next (long *istart, long *iend)$/;"	f	file:
gomp_loop_guided_start	src/loop.c	/^gomp_loop_guided_start (long start, long end, long incr, long chunk_size,$/;"	f	file:
gomp_loop_init	src/loop.c	/^gomp_loop_init (struct gomp_work_share *ws, long start, long end, long incr,$/;"	f	file:
gomp_loop_ordered_dynamic_next	src/loop.c	/^gomp_loop_ordered_dynamic_next (long *istart, long *iend)$/;"	f	file:
gomp_loop_ordered_dynamic_start	src/loop.c	/^gomp_loop_ordered_dynamic_start (long start, long end, long incr,$/;"	f	file:
gomp_loop_ordered_guided_next	src/loop.c	/^gomp_loop_ordered_guided_next (long *istart, long *iend)$/;"	f	file:
gomp_loop_ordered_guided_start	src/loop.c	/^gomp_loop_ordered_guided_start (long start, long end, long incr,$/;"	f	file:
gomp_loop_ordered_static_next	src/loop.c	/^gomp_loop_ordered_static_next (long *istart, long *iend)$/;"	f	file:
gomp_loop_ordered_static_start	src/loop.c	/^gomp_loop_ordered_static_start (long start, long end, long incr,$/;"	f	file:
gomp_loop_static_next	src/loop.c	/^gomp_loop_static_next (long *istart, long *iend)$/;"	f	file:
gomp_loop_static_start	src/loop.c	/^gomp_loop_static_start (long start, long end, long incr, long chunk_size,$/;"	f	file:
gomp_parallel_loop_start	src/loop.c	/^gomp_parallel_loop_start (void (*fn) (void *), void *data,$/;"	f	file:
ialias_redirect	src/loop.c	/^ialias_redirect (GOMP_parallel_end)$/;"	f
