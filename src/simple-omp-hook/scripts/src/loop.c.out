static inline void
gomp_loop_init (struct gomp_work_share *ws, long start, long end, long incr,
  enum gomp_schedule_type sched, long chunk_size)
{
}
static _Bool
gomp_loop_static_start (long start, long end, long incr, long chunk_size,
   long *istart, long *iend)
{
}






static _Bool
gomp_loop_dynamic_start (long start, long end, long incr, long chunk_size,
    long *istart, long *iend)
{
}




static _Bool
gomp_loop_guided_start (long start, long end, long incr, long chunk_size,
   long *istart, long *iend)
{
}

_Bool
GOMP_loop_runtime_start (long start, long end, long incr,
    long *istart, long *iend)
{
}




static _Bool
gomp_loop_ordered_static_start (long start, long end, long incr,
    long chunk_size, long *istart, long *iend)
{
}

static _Bool
gomp_loop_ordered_dynamic_start (long start, long end, long incr,
     long chunk_size, long *istart, long *iend)
{
}

static _Bool
gomp_loop_ordered_guided_start (long start, long end, long incr,
    long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_runtime_start (long start, long end, long incr,
     long *istart, long *iend)
{
}







static _Bool
gomp_loop_doacross_static_start (unsigned ncounts, long *counts,
     long chunk_size, long *istart, long *iend)
{
}

static _Bool
gomp_loop_doacross_dynamic_start (unsigned ncounts, long *counts,
      long chunk_size, long *istart, long *iend)
{
}

static _Bool
gomp_loop_doacross_guided_start (unsigned ncounts, long *counts,
     long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_doacross_runtime_start (unsigned ncounts, long *counts,
      long *istart, long *iend)
{
}
static _Bool
gomp_loop_static_next (long *istart, long *iend)
{
}

static _Bool
gomp_loop_dynamic_next (long *istart, long *iend)
{
}

static _Bool
gomp_loop_guided_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_runtime_next (long *istart, long *iend)
{
}
static _Bool
gomp_loop_ordered_static_next (long *istart, long *iend)
{
}

static _Bool
gomp_loop_ordered_dynamic_next (long *istart, long *iend)
{
}

static _Bool
gomp_loop_ordered_guided_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_runtime_next (long *istart, long *iend)
{
}




static void
gomp_parallel_loop_start (void (*fn) (void *), void *data,
     unsigned num_threads, long start, long end,
     long incr, enum gomp_schedule_type sched,
     long chunk_size, unsigned int flags)
{
}

void
GOMP_parallel_loop_static_start (void (*fn) (void *), void *data,
     unsigned num_threads, long start, long end,
     long incr, long chunk_size)
{
}

void
GOMP_parallel_loop_dynamic_start (void (*fn) (void *), void *data,
      unsigned num_threads, long start, long end,
      long incr, long chunk_size)
{
}

void
GOMP_parallel_loop_guided_start (void (*fn) (void *), void *data,
     unsigned num_threads, long start, long end,
     long incr, long chunk_size)
{
}

void
GOMP_parallel_loop_runtime_start (void (*fn) (void *), void *data,
      unsigned num_threads, long start, long end,
      long incr)
{
}


void
GOMP_parallel_loop_static (void (*fn) (void *), void *data,
      unsigned num_threads, long start, long end,
      long incr, long chunk_size, unsigned flags)
{
}

void
GOMP_parallel_loop_dynamic (void (*fn) (void *), void *data,
       unsigned num_threads, long start, long end,
       long incr, long chunk_size, unsigned flags)
{
}

void
GOMP_parallel_loop_guided (void (*fn) (void *), void *data,
     unsigned num_threads, long start, long end,
     long incr, long chunk_size, unsigned flags)
{
}







void
GOMP_parallel_loop_nonmonotonic_dynamic (void (*fn) (void *), void *data,
      unsigned num_threads, long start,
      long end, long incr, long chunk_size,
      unsigned flags)
{
}

void
GOMP_parallel_loop_nonmonotonic_guided (void (*fn) (void *), void *data,
     unsigned num_threads, long start,
     long end, long incr, long chunk_size,
     unsigned flags)
{
}


void
GOMP_parallel_loop_runtime (void (*fn) (void *), void *data,
       unsigned num_threads, long start, long end,
       long incr, unsigned flags)
{
}





void
GOMP_loop_end (void)
{
}

_Bool
GOMP_loop_end_cancel (void)
{
}

void
GOMP_loop_end_nowait (void)
{
}
_Bool
GOMP_loop_static_start (long start, long end, long incr, long chunk_size,
   long *istart, long *iend)
{
}

_Bool
GOMP_loop_dynamic_start (long start, long end, long incr, long chunk_size,
    long *istart, long *iend)
{
}

_Bool
GOMP_loop_guided_start (long start, long end, long incr, long chunk_size,
   long *istart, long *iend)
{
}

_Bool
GOMP_loop_nonmonotonic_dynamic_start (long start, long end, long incr,
          long chunk_size, long *istart,
          long *iend)
{
}

_Bool
GOMP_loop_nonmonotonic_guided_start (long start, long end, long incr,
         long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_static_start (long start, long end, long incr,
    long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_dynamic_start (long start, long end, long incr,
     long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_guided_start (long start, long end, long incr,
    long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_doacross_static_start (unsigned ncounts, long *counts,
     long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_doacross_dynamic_start (unsigned ncounts, long *counts,
      long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_doacross_guided_start (unsigned ncounts, long *counts,
     long chunk_size, long *istart, long *iend)
{
}

_Bool
GOMP_loop_static_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_dynamic_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_guided_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_nonmonotonic_dynamic_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_nonmonotonic_guided_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_static_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_dynamic_next (long *istart, long *iend)
{
}

_Bool
GOMP_loop_ordered_guided_next (long *istart, long *iend)
{
}
